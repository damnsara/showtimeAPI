// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Showtime.Infra.Data.Contexts;

namespace Showtime.API.Migrations
{
    [DbContext(typeof(SQLContext))]
    [Migration("20220217174140_PopulateUsersTable")]
    partial class PopulateUsersTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Showtime.Domain.Entities.Show", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Channel");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<int>("NumberOfSeasons")
                        .HasColumnType("int")
                        .HasColumnName("Number of Seasons");

                    b.Property<int>("ParentalRating")
                        .HasColumnType("int")
                        .HasColumnName("Parental Rating");

                    b.HasKey("Id");

                    b.ToTable("Shows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Channel = "Netflix",
                            Name = "Squid Game",
                            NumberOfSeasons = 1,
                            ParentalRating = 18
                        },
                        new
                        {
                            Id = 2,
                            Channel = "Fox",
                            Name = "Glee",
                            NumberOfSeasons = 6,
                            ParentalRating = 12
                        },
                        new
                        {
                            Id = 3,
                            Channel = "AMC",
                            Name = "Breaking Bad",
                            NumberOfSeasons = 5,
                            ParentalRating = 16
                        });
                });

            modelBuilder.Entity("Showtime.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("E-mail");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            Email = "buzz@gmail.com",
                            Password = "infinitybeyond",
                            Role = "admin",
                            Username = "Buzz Lightyear"
                        },
                        new
                        {
                            Id = 11,
                            Email = "selinakyle@gmail.com",
                            Password = "meow1234",
                            Role = "admin",
                            Username = "Catwoman"
                        },
                        new
                        {
                            Id = 12,
                            Email = "wandavision@gmail.com",
                            Password = "sokovia",
                            Role = "admin",
                            Username = "WandaMaximoff"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
